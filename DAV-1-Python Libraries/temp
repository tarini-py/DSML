{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOS7Y9KYNlxBSRqPGrXJ0Ay"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import warnings\n","warnings.filterwarnings('ignore')\n","from collections import Counter"],"metadata":{"id":"i4btk5zDLTBz","executionInfo":{"status":"ok","timestamp":1756313376519,"user_tz":-330,"elapsed":766,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["data=[1,1,1,3,4,2,5,6,2,3]"],"metadata":{"id":"HLBYAB2zbtrc","executionInfo":{"status":"ok","timestamp":1756313358969,"user_tz":-330,"elapsed":34,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Z_3pyDOCcEIM","executionInfo":{"status":"ok","timestamp":1756313450889,"user_tz":-330,"elapsed":31,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["!wget --no-check-certificate https://drive.google.com/uc?id=1Mrt008vkE4nVb1zE4f06_rtq70QPfkIo -O weight-height.csv\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BVH_p8uKky8-","executionInfo":{"status":"ok","timestamp":1756315215958,"user_tz":-330,"elapsed":1656,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"78ffb90d-9752-4dcb-dc7f-9f082d848468"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["--2025-08-27 17:20:22--  https://drive.google.com/uc?id=1Mrt008vkE4nVb1zE4f06_rtq70QPfkIo\n","Resolving drive.google.com (drive.google.com)... 108.177.121.139, 108.177.121.101, 108.177.121.138, ...\n","Connecting to drive.google.com (drive.google.com)|108.177.121.139|:443... connected.\n","HTTP request sent, awaiting response... 303 See Other\n","Location: https://drive.usercontent.google.com/download?id=1Mrt008vkE4nVb1zE4f06_rtq70QPfkIo [following]\n","--2025-08-27 17:20:22--  https://drive.usercontent.google.com/download?id=1Mrt008vkE4nVb1zE4f06_rtq70QPfkIo\n","Resolving drive.usercontent.google.com (drive.usercontent.google.com)... 173.194.194.132, 2607:f8b0:4001:c10::84\n","Connecting to drive.usercontent.google.com (drive.usercontent.google.com)|173.194.194.132|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 428120 (418K) [application/octet-stream]\n","Saving to: ‘weight-height.csv’\n","\n","weight-height.csv   100%[===================>] 418.09K  --.-KB/s    in 0.003s  \n","\n","2025-08-27 17:20:23 (157 MB/s) - ‘weight-height.csv’ saved [428120/428120]\n","\n"]}]},{"cell_type":"code","source":["df_hw = pd.read_csv(\"weight-height.csv\")"],"metadata":{"id":"fDun1PnEk11y","executionInfo":{"status":"ok","timestamp":1756315217470,"user_tz":-330,"elapsed":24,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["df_hw.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"fJFyspX4i3rv","executionInfo":{"status":"ok","timestamp":1756315256968,"user_tz":-330,"elapsed":105,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"0aa9057c-5ae7-4bb3-84c3-81f0b6e72634"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Gender     Height      Weight\n","0   Male  73.847017  241.893563\n","1   Male  68.781904  162.310473\n","2   Male  74.110105  212.740856\n","3   Male  71.730978  220.042470\n","4   Male  69.881796  206.349801"],"text/html":["\n","  <div id=\"df-238b30a1-3dcc-4de5-a13d-1dd0109ffa0d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Height</th>\n","      <th>Weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Male</td>\n","      <td>73.847017</td>\n","      <td>241.893563</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>68.781904</td>\n","      <td>162.310473</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Male</td>\n","      <td>74.110105</td>\n","      <td>212.740856</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Male</td>\n","      <td>71.730978</td>\n","      <td>220.042470</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Male</td>\n","      <td>69.881796</td>\n","      <td>206.349801</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-238b30a1-3dcc-4de5-a13d-1dd0109ffa0d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-238b30a1-3dcc-4de5-a13d-1dd0109ffa0d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-238b30a1-3dcc-4de5-a13d-1dd0109ffa0d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-79e956c0-9c44-4408-9e90-9f7751f8e9ec\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-79e956c0-9c44-4408-9e90-9f7751f8e9ec')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-79e956c0-9c44-4408-9e90-9f7751f8e9ec button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_hw","summary":"{\n  \"name\": \"df_hw\",\n  \"rows\": 10000,\n  \"fields\": [\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.8475281207732324,\n        \"min\": 54.2631333250971,\n        \"max\": 78.9987423463896,\n        \"num_unique_values\": 10000,\n        \"samples\": [\n          68.6872321923365,\n          68.8293337723017\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32.108439006519546,\n        \"min\": 64.700126712753,\n        \"max\": 269.989698505106,\n        \"num_unique_values\": 10000,\n        \"samples\": [\n          173.115812588004,\n          195.162042097346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["np.percentile(df_hw['Height'],q=75)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qHcnvaQ5i7XZ","executionInfo":{"status":"ok","timestamp":1756315543532,"user_tz":-330,"elapsed":13,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"52a46b64-38fc-4155-dee7-734ea94907f1"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(69.1742617268347)"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["df_hw['Height'].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":334},"id":"grIY1eZ-i7Th","executionInfo":{"status":"ok","timestamp":1756315529882,"user_tz":-330,"elapsed":79,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"8d7525b9-9937-46d8-daa4-13d560d278a8"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    10000.000000\n","mean        66.367560\n","std          3.847528\n","min         54.263133\n","25%         63.505620\n","50%         66.318070\n","75%         69.174262\n","max         78.998742\n","Name: Height, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Height</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>10000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>66.367560</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.847528</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>54.263133</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>63.505620</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>66.318070</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>69.174262</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>78.998742</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":[],"metadata":{"id":"XvZOpsSVi7P_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"HAfLZb6li7Lz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"xOsyEib2i7Ip"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"k9FEwGpsi7Fd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"JJOexa0Ci7CH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"m1cJbKZ0i6-8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"xpm8kZTKi670"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"RTt5OYJRi64b"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"WCpSWNkki61p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Nil59H54i6y3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"M8t_w05Qi6wB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"0d_YfTZvi6s9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"j3A0985Ji6qF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"yu9kxPFTi6nG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"SXrpmJOWi6jg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"lMUiokiHi6gA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Em5m5trEi6c7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"5t-K-hW_i6Zi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"ZsPSe_c6i6Wi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"O-RZ0nmfi6Tt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"5kYj_W8ui6Qq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"A30S55dgi6N8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Fxkx5dKBi6LF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"EJzyFt3Si6Hz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"_nyjaGXZi6Ep"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"p32mSvssi6BV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"j37KnmXEi3oQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"zzrIB32Ri3kq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"oTGOCOkoi3gk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Cse36O8ui3d0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"dk9HRnnbi3a9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"FsuLCOjKi3X-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"1G7hqQHXi3Vf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Counter(data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vWMB5Gq5btoj","executionInfo":{"status":"ok","timestamp":1756313378398,"user_tz":-330,"elapsed":44,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"6993bff7-500b-4112-865c-5ff0badeb28e"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Counter({1: 3, 3: 2, 4: 1, 2: 2, 5: 1, 6: 1})"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["pd.Series(data).mode()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":115},"id":"NGIDDfkhbtlV","executionInfo":{"status":"ok","timestamp":1756313423070,"user_tz":-330,"elapsed":39,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"2a74c533-3a32-45ae-b74a-f10e44baf199"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    1\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":[],"metadata":{"id":"9OK8sKfEbtiu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"JbWjOHxUbtf5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"UC_u-ewYbtdN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"hw_DbPC-btWF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns\n","titanic = sns.load_dataset('titanic')"],"metadata":{"id":"O5KbTYVk-3do"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["titanic = pd.read_csv('https://raw.githubusercontent.com/mwaskom/seaborn-data/master/titanic.csv')"],"metadata":{"id":"tovsXJJWR-QJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["titanic"],"metadata":{"id":"IlBI1MFMSJ_z","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1755148168631,"user_tz":-330,"elapsed":336,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"2ba08cc9-e67e-4de4-d3e9-962721601755"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     survived  pclass     sex   age  sibsp  parch     fare embarked   class  \\\n","0           0       3    male  22.0      1      0   7.2500        S   Third   \n","1           1       1  female  38.0      1      0  71.2833        C   First   \n","2           1       3  female  26.0      0      0   7.9250        S   Third   \n","3           1       1  female  35.0      1      0  53.1000        S   First   \n","4           0       3    male  35.0      0      0   8.0500        S   Third   \n","..        ...     ...     ...   ...    ...    ...      ...      ...     ...   \n","886         0       2    male  27.0      0      0  13.0000        S  Second   \n","887         1       1  female  19.0      0      0  30.0000        S   First   \n","888         0       3  female   NaN      1      2  23.4500        S   Third   \n","889         1       1    male  26.0      0      0  30.0000        C   First   \n","890         0       3    male  32.0      0      0   7.7500        Q   Third   \n","\n","       who  adult_male deck  embark_town alive  alone  \n","0      man        True  NaN  Southampton    no  False  \n","1    woman       False    C    Cherbourg   yes  False  \n","2    woman       False  NaN  Southampton   yes   True  \n","3    woman       False    C  Southampton   yes  False  \n","4      man        True  NaN  Southampton    no   True  \n","..     ...         ...  ...          ...   ...    ...  \n","886    man        True  NaN  Southampton    no   True  \n","887  woman       False    B  Southampton   yes   True  \n","888  woman       False  NaN  Southampton    no  False  \n","889    man        True    C    Cherbourg   yes   True  \n","890    man        True  NaN   Queenstown    no   True  \n","\n","[891 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-17a23304-f5f4-40a8-abfc-bbbd9b10484a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>deck</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13.0000</td>\n","      <td>S</td>\n","      <td>Second</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>B</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>23.4500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0000</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>C</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.7500</td>\n","      <td>Q</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Queenstown</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>891 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-17a23304-f5f4-40a8-abfc-bbbd9b10484a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-17a23304-f5f4-40a8-abfc-bbbd9b10484a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-17a23304-f5f4-40a8-abfc-bbbd9b10484a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-62a56b40-f91a-43ec-84f2-d4f77d3aedf3\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-62a56b40-f91a-43ec-84f2-d4f77d3aedf3')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-62a56b40-f91a-43ec-84f2-d4f77d3aedf3 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_f1df2515-4641-4c1f-8a0a-0f11b5956c73\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('titanic')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f1df2515-4641-4c1f-8a0a-0f11b5956c73 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('titanic');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"titanic","summary":"{\n  \"name\": \"titanic\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.526497332334044,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sibsp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.693428597180905,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"embarked\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Third\",\n          \"First\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"who\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"man\",\n          \"woman\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"adult_male\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"deck\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"C\",\n          \"E\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"embark_town\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Southampton\",\n          \"Cherbourg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alive\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\",\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alone\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["sns.boxplot(data=titanic,x='alone',y='age',hue='alive')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"J6IdUNYV_LPV","executionInfo":{"status":"ok","timestamp":1755148435916,"user_tz":-330,"elapsed":588,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"62406c0b-803b-421c-c495-c33e2bfa3367"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["titanic.info()"],"metadata":{"id":"fmmFSHRmKIIo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1754992873942,"user_tz":-330,"elapsed":11,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"f8881f53-317b-4be3-cbfa-328dbbc72f6d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 15 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   survived     891 non-null    int64  \n"," 1   pclass       891 non-null    int64  \n"," 2   sex          891 non-null    object \n"," 3   age          714 non-null    float64\n"," 4   sibsp        891 non-null    int64  \n"," 5   parch        891 non-null    int64  \n"," 6   fare         891 non-null    float64\n"," 7   embarked     889 non-null    object \n"," 8   class        891 non-null    object \n"," 9   who          891 non-null    object \n"," 10  adult_male   891 non-null    bool   \n"," 11  deck         203 non-null    object \n"," 12  embark_town  889 non-null    object \n"," 13  alive        891 non-null    object \n"," 14  alone        891 non-null    bool   \n","dtypes: bool(2), float64(2), int64(4), object(7)\n","memory usage: 92.4+ KB\n"]}]},{"cell_type":"code","source":["s=titanic[titanic.survived==1]\n","ns=titanic[titanic.survived==0]"],"metadata":{"id":"B-9WjxMQudMy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.countplot(data=titanic,x='sex',hue='alive')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"g-SiXWI0uoF6","executionInfo":{"status":"ok","timestamp":1754993582574,"user_tz":-330,"elapsed":272,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"85970f21-f1a3-4207-9592-93b099fd3761"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.boxplot(data=titanic,y='age',hue='alive')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":411},"id":"vc8jjkXCxH6o","executionInfo":{"status":"ok","timestamp":1754993727853,"user_tz":-330,"elapsed":227,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"75840a9a-db11-464e-f22e-a993dbaede24"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.boxplot(data=titanic,x='sex',y='age',hue='alive')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"fkvah3EgxbPn","executionInfo":{"status":"ok","timestamp":1754993831780,"user_tz":-330,"elapsed":272,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"e808d337-d9b3-43f7-9b25-4bb739be9984"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.barplot(data=titanic,x='sex',y='age',hue='alive',estimator=np.mean)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"sYWmZ6DfyKzb","executionInfo":{"status":"ok","timestamp":1754994318240,"user_tz":-330,"elapsed":274,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"42045b48-f631-4329-d537-13ddfd93632d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"cepQnkW0z0IN"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"veLL0TXNbZLw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1755062250942,"user_tz":-330,"elapsed":1118,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"e7a146db-4ab7-4943-9811-e8d1b1287866"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading...\n","From: https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/000/940/original/netflix.csv\n","To: /content/netflix.csv\n","\r  0% 0.00/3.40M [00:00<?, ?B/s]\r 46% 1.57M/3.40M [00:00<00:00, 15.2MB/s]\r100% 3.40M/3.40M [00:00<00:00, 23.9MB/s]\n"]}],"source":["!gdown https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/000/940/original/netflix.csv"]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"FBzFNDl9czJt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df=pd.read_csv('netflix.csv')\n","data=df"],"metadata":{"id":"GGE4PzWsc_UA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["c=df.columns[[3,4,5,10]]\n","c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9bYVllRn3MGO","executionInfo":{"status":"ok","timestamp":1755063229758,"user_tz":-330,"elapsed":26,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"9fc1ecc9-a0c4-4bd8-8b0c-fd20c28bd75f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['director', 'cast', 'country', 'listed_in'], dtype='object')"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["for i in c:\n","  print(i)\n","  df[i]=df[i].str.split(',')\n","  df=df.explode(i)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Hnv1slTI3TUT","executionInfo":{"status":"ok","timestamp":1755063250507,"user_tz":-330,"elapsed":566,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"ef20d4fb-0f17-4d2b-d11d-e3c00b6016d6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["director\n","cast\n","country\n","listed_in\n"]}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":857},"id":"Y2AVg1i-7AFy","executionInfo":{"status":"ok","timestamp":1755063257716,"user_tz":-330,"elapsed":78,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"d7a92d33-dda5-4a45-9a82-f7bf4e20d6c6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     show_id     type                 title         director  \\\n","0         s1    Movie  Dick Johnson Is Dead  Kirsten Johnson   \n","1         s2  TV Show         Blood & Water              NaN   \n","1         s2  TV Show         Blood & Water              NaN   \n","1         s2  TV Show         Blood & Water              NaN   \n","1         s2  TV Show         Blood & Water              NaN   \n","...      ...      ...                   ...              ...   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","\n","                        cast        country          date_added  release_year  \\\n","0                        NaN  United States  September 25, 2021          2020   \n","1                 Ama Qamata   South Africa  September 24, 2021          2021   \n","1                 Ama Qamata   South Africa  September 24, 2021          2021   \n","1                 Ama Qamata   South Africa  September 24, 2021          2021   \n","1                Khosi Ngema   South Africa  September 24, 2021          2021   \n","...                      ...            ...                 ...           ...   \n","8806          Anita Shabdish          India       March 2, 2019          2015   \n","8806          Anita Shabdish          India       March 2, 2019          2015   \n","8806   Chittaranjan Tripathy          India       March 2, 2019          2015   \n","8806   Chittaranjan Tripathy          India       March 2, 2019          2015   \n","8806   Chittaranjan Tripathy          India       March 2, 2019          2015   \n","\n","     rating   duration               listed_in  \\\n","0     PG-13     90 min           Documentaries   \n","1     TV-MA  2 Seasons  International TV Shows   \n","1     TV-MA  2 Seasons               TV Dramas   \n","1     TV-MA  2 Seasons            TV Mysteries   \n","1     TV-MA  2 Seasons  International TV Shows   \n","...     ...        ...                     ...   \n","8806  TV-14    111 min    International Movies   \n","8806  TV-14    111 min        Music & Musicals   \n","8806  TV-14    111 min                  Dramas   \n","8806  TV-14    111 min    International Movies   \n","8806  TV-14    111 min        Music & Musicals   \n","\n","                                            description  \n","0     As her father nears the end of his life, filmm...  \n","1     After crossing paths at a party, a Cape Town t...  \n","1     After crossing paths at a party, a Cape Town t...  \n","1     After crossing paths at a party, a Cape Town t...  \n","1     After crossing paths at a party, a Cape Town t...  \n","...                                                 ...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","\n","[202065 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-6a6d0053-dca4-47f7-8cbc-50adb4a45bfe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_id</th>\n","      <th>type</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>country</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>s1</td>\n","      <td>Movie</td>\n","      <td>Dick Johnson Is Dead</td>\n","      <td>Kirsten Johnson</td>\n","      <td>NaN</td>\n","      <td>United States</td>\n","      <td>September 25, 2021</td>\n","      <td>2020</td>\n","      <td>PG-13</td>\n","      <td>90 min</td>\n","      <td>Documentaries</td>\n","      <td>As her father nears the end of his life, filmm...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>NaN</td>\n","      <td>Ama Qamata</td>\n","      <td>South Africa</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>International TV Shows</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>NaN</td>\n","      <td>Ama Qamata</td>\n","      <td>South Africa</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Dramas</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>NaN</td>\n","      <td>Ama Qamata</td>\n","      <td>South Africa</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Mysteries</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>NaN</td>\n","      <td>Khosi Ngema</td>\n","      <td>South Africa</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>International TV Shows</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Anita Shabdish</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>International Movies</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Anita Shabdish</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>Music &amp; Musicals</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Chittaranjan Tripathy</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>Dramas</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Chittaranjan Tripathy</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>International Movies</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Chittaranjan Tripathy</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>Music &amp; Musicals</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>202065 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6a6d0053-dca4-47f7-8cbc-50adb4a45bfe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6a6d0053-dca4-47f7-8cbc-50adb4a45bfe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6a6d0053-dca4-47f7-8cbc-50adb4a45bfe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e0ed849a-c93d-4b35-9173-3bca3cdf942d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0ed849a-c93d-4b35-9173-3bca3cdf942d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e0ed849a-c93d-4b35-9173-3bca3cdf942d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_e557ef5a-a434-4072-8260-e39cc17416bc\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e557ef5a-a434-4072-8260-e39cc17416bc button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["df['cast']=df['cast'].str.split(',')"],"metadata":{"id":"4LzbVwxQ3ivq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"jGqJgh723t8h","executionInfo":{"status":"ok","timestamp":1755062790220,"user_tz":-330,"elapsed":242,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"a37d218f-a3fd-4d5f-8ca9-3e93d8f28ffc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     show_id     type                  title         director  \\\n","0         s1    Movie   Dick Johnson Is Dead  Kirsten Johnson   \n","1         s2  TV Show          Blood & Water              NaN   \n","2         s3  TV Show              Ganglands  Julien Leclercq   \n","3         s4  TV Show  Jailbirds New Orleans              NaN   \n","4         s5  TV Show           Kota Factory              NaN   \n","...      ...      ...                    ...              ...   \n","8802   s8803    Movie                 Zodiac    David Fincher   \n","8803   s8804  TV Show            Zombie Dumb              NaN   \n","8804   s8805    Movie             Zombieland  Ruben Fleischer   \n","8805   s8806    Movie                   Zoom     Peter Hewitt   \n","8806   s8807    Movie                 Zubaan      Mozez Singh   \n","\n","                                                   cast        country  \\\n","0                                                   NaN  United States   \n","1     [Ama Qamata,  Khosi Ngema,  Gail Mabalane,  Th...   South Africa   \n","2     [Sami Bouajila,  Tracy Gotoas,  Samuel Jouy,  ...            NaN   \n","3                                                   NaN            NaN   \n","4     [Mayur More,  Jitendra Kumar,  Ranjan Raj,  Al...          India   \n","...                                                 ...            ...   \n","8802  [Mark Ruffalo,  Jake Gyllenhaal,  Robert Downe...  United States   \n","8803                                                NaN            NaN   \n","8804  [Jesse Eisenberg,  Woody Harrelson,  Emma Ston...  United States   \n","8805  [Tim Allen,  Courteney Cox,  Chevy Chase,  Kat...  United States   \n","8806  [Vicky Kaushal,  Sarah-Jane Dias,  Raaghav Cha...          India   \n","\n","              date_added  release_year rating   duration  \\\n","0     September 25, 2021          2020  PG-13     90 min   \n","1     September 24, 2021          2021  TV-MA  2 Seasons   \n","2     September 24, 2021          2021  TV-MA   1 Season   \n","3     September 24, 2021          2021  TV-MA   1 Season   \n","4     September 24, 2021          2021  TV-MA  2 Seasons   \n","...                  ...           ...    ...        ...   \n","8802   November 20, 2019          2007      R    158 min   \n","8803        July 1, 2019          2018  TV-Y7  2 Seasons   \n","8804    November 1, 2019          2009      R     88 min   \n","8805    January 11, 2020          2006     PG     88 min   \n","8806       March 2, 2019          2015  TV-14    111 min   \n","\n","                                              listed_in  \\\n","0                                         Documentaries   \n","1       International TV Shows, TV Dramas, TV Mysteries   \n","2     Crime TV Shows, International TV Shows, TV Act...   \n","3                                Docuseries, Reality TV   \n","4     International TV Shows, Romantic TV Shows, TV ...   \n","...                                                 ...   \n","8802                     Cult Movies, Dramas, Thrillers   \n","8803             Kids' TV, Korean TV Shows, TV Comedies   \n","8804                            Comedies, Horror Movies   \n","8805                 Children & Family Movies, Comedies   \n","8806     Dramas, International Movies, Music & Musicals   \n","\n","                                            description  \n","0     As her father nears the end of his life, filmm...  \n","1     After crossing paths at a party, a Cape Town t...  \n","2     To protect his family from a powerful drug lor...  \n","3     Feuds, flirtations and toilet talk go down amo...  \n","4     In a city of coaching centers known to train I...  \n","...                                                 ...  \n","8802  A political cartoonist, a crime reporter and a...  \n","8803  While living alone in a spooky town, a young g...  \n","8804  Looking to survive in a world taken over by zo...  \n","8805  Dragged from civilian life, a former superhero...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","\n","[8807 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-beee403b-8e8d-4bc1-9eb3-d5bc6a0f6831\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_id</th>\n","      <th>type</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>country</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>s1</td>\n","      <td>Movie</td>\n","      <td>Dick Johnson Is Dead</td>\n","      <td>Kirsten Johnson</td>\n","      <td>NaN</td>\n","      <td>United States</td>\n","      <td>September 25, 2021</td>\n","      <td>2020</td>\n","      <td>PG-13</td>\n","      <td>90 min</td>\n","      <td>Documentaries</td>\n","      <td>As her father nears the end of his life, filmm...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>NaN</td>\n","      <td>[Ama Qamata,  Khosi Ngema,  Gail Mabalane,  Th...</td>\n","      <td>South Africa</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>s3</td>\n","      <td>TV Show</td>\n","      <td>Ganglands</td>\n","      <td>Julien Leclercq</td>\n","      <td>[Sami Bouajila,  Tracy Gotoas,  Samuel Jouy,  ...</td>\n","      <td>NaN</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>1 Season</td>\n","      <td>Crime TV Shows, International TV Shows, TV Act...</td>\n","      <td>To protect his family from a powerful drug lor...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>s4</td>\n","      <td>TV Show</td>\n","      <td>Jailbirds New Orleans</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>1 Season</td>\n","      <td>Docuseries, Reality TV</td>\n","      <td>Feuds, flirtations and toilet talk go down amo...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>s5</td>\n","      <td>TV Show</td>\n","      <td>Kota Factory</td>\n","      <td>NaN</td>\n","      <td>[Mayur More,  Jitendra Kumar,  Ranjan Raj,  Al...</td>\n","      <td>India</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>International TV Shows, Romantic TV Shows, TV ...</td>\n","      <td>In a city of coaching centers known to train I...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8802</th>\n","      <td>s8803</td>\n","      <td>Movie</td>\n","      <td>Zodiac</td>\n","      <td>David Fincher</td>\n","      <td>[Mark Ruffalo,  Jake Gyllenhaal,  Robert Downe...</td>\n","      <td>United States</td>\n","      <td>November 20, 2019</td>\n","      <td>2007</td>\n","      <td>R</td>\n","      <td>158 min</td>\n","      <td>Cult Movies, Dramas, Thrillers</td>\n","      <td>A political cartoonist, a crime reporter and a...</td>\n","    </tr>\n","    <tr>\n","      <th>8803</th>\n","      <td>s8804</td>\n","      <td>TV Show</td>\n","      <td>Zombie Dumb</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>July 1, 2019</td>\n","      <td>2018</td>\n","      <td>TV-Y7</td>\n","      <td>2 Seasons</td>\n","      <td>Kids' TV, Korean TV Shows, TV Comedies</td>\n","      <td>While living alone in a spooky town, a young g...</td>\n","    </tr>\n","    <tr>\n","      <th>8804</th>\n","      <td>s8805</td>\n","      <td>Movie</td>\n","      <td>Zombieland</td>\n","      <td>Ruben Fleischer</td>\n","      <td>[Jesse Eisenberg,  Woody Harrelson,  Emma Ston...</td>\n","      <td>United States</td>\n","      <td>November 1, 2019</td>\n","      <td>2009</td>\n","      <td>R</td>\n","      <td>88 min</td>\n","      <td>Comedies, Horror Movies</td>\n","      <td>Looking to survive in a world taken over by zo...</td>\n","    </tr>\n","    <tr>\n","      <th>8805</th>\n","      <td>s8806</td>\n","      <td>Movie</td>\n","      <td>Zoom</td>\n","      <td>Peter Hewitt</td>\n","      <td>[Tim Allen,  Courteney Cox,  Chevy Chase,  Kat...</td>\n","      <td>United States</td>\n","      <td>January 11, 2020</td>\n","      <td>2006</td>\n","      <td>PG</td>\n","      <td>88 min</td>\n","      <td>Children &amp; Family Movies, Comedies</td>\n","      <td>Dragged from civilian life, a former superhero...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>[Vicky Kaushal,  Sarah-Jane Dias,  Raaghav Cha...</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>Dramas, International Movies, Music &amp; Musicals</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8807 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-beee403b-8e8d-4bc1-9eb3-d5bc6a0f6831')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-beee403b-8e8d-4bc1-9eb3-d5bc6a0f6831 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-beee403b-8e8d-4bc1-9eb3-d5bc6a0f6831');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e422dc55-8709-4270-b56c-8064c318fb56\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e422dc55-8709-4270-b56c-8064c318fb56')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e422dc55-8709-4270-b56c-8064c318fb56 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_cb1adead-3785-4fcb-92d9-93817d60e902\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_cb1adead-3785-4fcb-92d9-93817d60e902 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8807,\n  \"fields\": [\n    {\n      \"column\": \"show_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8807,\n        \"samples\": [\n          \"s4971\",\n          \"s3363\",\n          \"s5495\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"TV Show\",\n          \"Movie\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8807,\n        \"samples\": [\n          \"Game Over, Man!\",\n          \"Arsenio Hall: Smart & Classy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"director\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4528,\n        \"samples\": [\n          \"Kanwal Sethi\",\n          \"R\\u00e9my Four, Julien War\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cast\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 748,\n        \"samples\": [\n          \"United States, United Kingdom, Denmark, Sweden\",\n          \"United Kingdom, Hong Kong\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date_added\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1767,\n        \"samples\": [\n          \"October 22, 2018\",\n          \"January 29, 2021\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"release_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1925,\n        \"max\": 2021,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          1996,\n          1969\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"PG-13\",\n          \"TV-MA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 220,\n        \"samples\": [\n          \"37 min\",\n          \"177 min\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"listed_in\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 514,\n        \"samples\": [\n          \"Crime TV Shows, International TV Shows, TV Mysteries\",\n          \"Children & Family Movies, Classic Movies, Dramas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"description\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8775,\n        \"samples\": [\n          \"A heedless teen drifter who falls for a small-town waitress makes the mistake of robbing a drug lord, putting his life and newfound love in jeopardy.\",\n          \"Twelve-year-old Calvin manages to join the navy and serves in the battle of Guadalcanal. But when his age is revealed, the boy is sent to the brig.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["df=df.explode('cast')"],"metadata":{"id":"qEuwEb9V4Dqc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":926},"id":"ZSNbTXnn4L9i","executionInfo":{"status":"ok","timestamp":1755062846288,"user_tz":-330,"elapsed":586,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"8da2c14e-3010-434e-f22c-36473104f8d9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     show_id     type                 title         director  \\\n","0         s1    Movie  Dick Johnson Is Dead  Kirsten Johnson   \n","1         s2  TV Show         Blood & Water              NaN   \n","1         s2  TV Show         Blood & Water              NaN   \n","1         s2  TV Show         Blood & Water              NaN   \n","1         s2  TV Show         Blood & Water              NaN   \n","...      ...      ...                   ...              ...   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","\n","                        cast        country          date_added  release_year  \\\n","0                        NaN  United States  September 25, 2021          2020   \n","1                 Ama Qamata   South Africa  September 24, 2021          2021   \n","1                Khosi Ngema   South Africa  September 24, 2021          2021   \n","1              Gail Mabalane   South Africa  September 24, 2021          2021   \n","1             Thabang Molaba   South Africa  September 24, 2021          2021   \n","...                      ...            ...                 ...           ...   \n","8806        Manish Chaudhary          India       March 2, 2019          2015   \n","8806            Meghna Malik          India       March 2, 2019          2015   \n","8806           Malkeet Rauni          India       March 2, 2019          2015   \n","8806          Anita Shabdish          India       March 2, 2019          2015   \n","8806   Chittaranjan Tripathy          India       March 2, 2019          2015   \n","\n","     rating   duration                                        listed_in  \\\n","0     PG-13     90 min                                    Documentaries   \n","1     TV-MA  2 Seasons  International TV Shows, TV Dramas, TV Mysteries   \n","1     TV-MA  2 Seasons  International TV Shows, TV Dramas, TV Mysteries   \n","1     TV-MA  2 Seasons  International TV Shows, TV Dramas, TV Mysteries   \n","1     TV-MA  2 Seasons  International TV Shows, TV Dramas, TV Mysteries   \n","...     ...        ...                                              ...   \n","8806  TV-14    111 min   Dramas, International Movies, Music & Musicals   \n","8806  TV-14    111 min   Dramas, International Movies, Music & Musicals   \n","8806  TV-14    111 min   Dramas, International Movies, Music & Musicals   \n","8806  TV-14    111 min   Dramas, International Movies, Music & Musicals   \n","8806  TV-14    111 min   Dramas, International Movies, Music & Musicals   \n","\n","                                            description  \n","0     As her father nears the end of his life, filmm...  \n","1     After crossing paths at a party, a Cape Town t...  \n","1     After crossing paths at a party, a Cape Town t...  \n","1     After crossing paths at a party, a Cape Town t...  \n","1     After crossing paths at a party, a Cape Town t...  \n","...                                                 ...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","\n","[64951 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-02f171c1-0eb9-4430-933b-351faef1ca8a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_id</th>\n","      <th>type</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>country</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>s1</td>\n","      <td>Movie</td>\n","      <td>Dick Johnson Is Dead</td>\n","      <td>Kirsten Johnson</td>\n","      <td>NaN</td>\n","      <td>United States</td>\n","      <td>September 25, 2021</td>\n","      <td>2020</td>\n","      <td>PG-13</td>\n","      <td>90 min</td>\n","      <td>Documentaries</td>\n","      <td>As her father nears the end of his life, filmm...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>NaN</td>\n","      <td>Ama Qamata</td>\n","      <td>South Africa</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>NaN</td>\n","      <td>Khosi Ngema</td>\n","      <td>South Africa</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>NaN</td>\n","      <td>Gail Mabalane</td>\n","      <td>South Africa</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>NaN</td>\n","      <td>Thabang Molaba</td>\n","      <td>South Africa</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Manish Chaudhary</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>Dramas, International Movies, Music &amp; Musicals</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Meghna Malik</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>Dramas, International Movies, Music &amp; Musicals</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Malkeet Rauni</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>Dramas, International Movies, Music &amp; Musicals</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Anita Shabdish</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>Dramas, International Movies, Music &amp; Musicals</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Chittaranjan Tripathy</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>Dramas, International Movies, Music &amp; Musicals</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>64951 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02f171c1-0eb9-4430-933b-351faef1ca8a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-02f171c1-0eb9-4430-933b-351faef1ca8a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-02f171c1-0eb9-4430-933b-351faef1ca8a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9adbcf65-5114-4d0b-85b1-2eddfb0969db\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9adbcf65-5114-4d0b-85b1-2eddfb0969db')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9adbcf65-5114-4d0b-85b1-2eddfb0969db button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_4faeca5c-5a3f-498e-ae6d-6e2cfc82a6a3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4faeca5c-5a3f-498e-ae6d-6e2cfc82a6a3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 64951,\n  \"fields\": [\n    {\n      \"column\": \"show_id\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8807,\n        \"samples\": [\n          \"s4971\",\n          \"s3363\",\n          \"s5495\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"TV Show\",\n          \"Movie\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8807,\n        \"samples\": [\n          \"Game Over, Man!\",\n          \"Arsenio Hall: Smart & Classy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4528,\n        \"samples\": [\n          \"Kanwal Sethi\",\n          \"R\\u00e9my Four, Julien War\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cast\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39296,\n        \"samples\": [\n          \" Albert Evans\",\n          \" Matt McCooey\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 748,\n        \"samples\": [\n          \"United States, United Kingdom, Denmark, Sweden\",\n          \"United Kingdom, Hong Kong\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date_added\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1767,\n        \"samples\": [\n          \"October 22, 2018\",\n          \"January 29, 2021\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"release_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1925,\n        \"max\": 2021,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          1996,\n          1969\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"PG-13\",\n          \"TV-MA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 220,\n        \"samples\": [\n          \"37 min\",\n          \"177 min\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"listed_in\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 514,\n        \"samples\": [\n          \"Crime TV Shows, International TV Shows, TV Mysteries\",\n          \"Children & Family Movies, Classic Movies, Dramas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"description\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8775,\n        \"samples\": [\n          \"A heedless teen drifter who falls for a small-town waitress makes the mistake of robbing a drug lord, putting his life and newfound love in jeopardy.\",\n          \"Twelve-year-old Calvin manages to join the navy and serves in the battle of Guadalcanal. But when his age is revealed, the boy is sent to the brig.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["df['country']=df['country'].str.split(',')"],"metadata":{"id":"_mVRpNSF4kn5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df=df.explode('country')"],"metadata":{"id":"4QtIv5qi41r0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.director=df.director.str.split(',')"],"metadata":{"id":"zeV6f2pQ5jrJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df=df.explode('director')"],"metadata":{"id":"3gU21hiW5qrc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['listed_in']=df['listed_in'].str.split(',')"],"metadata":{"id":"ED3_Y9cB58__"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df=df.explode('listed_in')"],"metadata":{"id":"cJL3zEmn6AJW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":857},"id":"0T3pJGUj6KqM","executionInfo":{"status":"ok","timestamp":1755066620898,"user_tz":-330,"elapsed":55,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"4bf3ea22-1615-432a-89e9-12ccb3233111"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     show_id     type                 title         director  \\\n","0         s1    Movie  Dick Johnson Is Dead  Kirsten Johnson   \n","1         s2  TV Show         Blood & Water              NaN   \n","1         s2  TV Show         Blood & Water              NaN   \n","1         s2  TV Show         Blood & Water              NaN   \n","1         s2  TV Show         Blood & Water              NaN   \n","...      ...      ...                   ...              ...   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","8806   s8807    Movie                Zubaan      Mozez Singh   \n","\n","                        cast        country          date_added  release_year  \\\n","0                        NaN  United States  September 25, 2021          2020   \n","1                 Ama Qamata   South Africa  September 24, 2021          2021   \n","1                 Ama Qamata   South Africa  September 24, 2021          2021   \n","1                 Ama Qamata   South Africa  September 24, 2021          2021   \n","1                Khosi Ngema   South Africa  September 24, 2021          2021   \n","...                      ...            ...                 ...           ...   \n","8806          Anita Shabdish          India       March 2, 2019          2015   \n","8806          Anita Shabdish          India       March 2, 2019          2015   \n","8806   Chittaranjan Tripathy          India       March 2, 2019          2015   \n","8806   Chittaranjan Tripathy          India       March 2, 2019          2015   \n","8806   Chittaranjan Tripathy          India       March 2, 2019          2015   \n","\n","     rating   duration               listed_in  \\\n","0     PG-13     90 min           Documentaries   \n","1     TV-MA  2 Seasons  International TV Shows   \n","1     TV-MA  2 Seasons               TV Dramas   \n","1     TV-MA  2 Seasons            TV Mysteries   \n","1     TV-MA  2 Seasons  International TV Shows   \n","...     ...        ...                     ...   \n","8806  TV-14    111 min    International Movies   \n","8806  TV-14    111 min        Music & Musicals   \n","8806  TV-14    111 min                  Dramas   \n","8806  TV-14    111 min    International Movies   \n","8806  TV-14    111 min        Music & Musicals   \n","\n","                                            description  \n","0     As her father nears the end of his life, filmm...  \n","1     After crossing paths at a party, a Cape Town t...  \n","1     After crossing paths at a party, a Cape Town t...  \n","1     After crossing paths at a party, a Cape Town t...  \n","1     After crossing paths at a party, a Cape Town t...  \n","...                                                 ...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","8806  A scrappy but poor boy worms his way into a ty...  \n","\n","[202065 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-799a3d4c-cd2c-475e-a3e0-b55be76b2613\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_id</th>\n","      <th>type</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>country</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>s1</td>\n","      <td>Movie</td>\n","      <td>Dick Johnson Is Dead</td>\n","      <td>Kirsten Johnson</td>\n","      <td>NaN</td>\n","      <td>United States</td>\n","      <td>September 25, 2021</td>\n","      <td>2020</td>\n","      <td>PG-13</td>\n","      <td>90 min</td>\n","      <td>Documentaries</td>\n","      <td>As her father nears the end of his life, filmm...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>NaN</td>\n","      <td>Ama Qamata</td>\n","      <td>South Africa</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>International TV Shows</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>NaN</td>\n","      <td>Ama Qamata</td>\n","      <td>South Africa</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Dramas</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>NaN</td>\n","      <td>Ama Qamata</td>\n","      <td>South Africa</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Mysteries</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>NaN</td>\n","      <td>Khosi Ngema</td>\n","      <td>South Africa</td>\n","      <td>September 24, 2021</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>International TV Shows</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Anita Shabdish</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>International Movies</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Anita Shabdish</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>Music &amp; Musicals</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Chittaranjan Tripathy</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>Dramas</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Chittaranjan Tripathy</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>International Movies</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Zubaan</td>\n","      <td>Mozez Singh</td>\n","      <td>Chittaranjan Tripathy</td>\n","      <td>India</td>\n","      <td>March 2, 2019</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","      <td>Music &amp; Musicals</td>\n","      <td>A scrappy but poor boy worms his way into a ty...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>202065 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-799a3d4c-cd2c-475e-a3e0-b55be76b2613')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-799a3d4c-cd2c-475e-a3e0-b55be76b2613 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-799a3d4c-cd2c-475e-a3e0-b55be76b2613');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c7a036b6-0616-46f9-8cce-8c8d088b20e8\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c7a036b6-0616-46f9-8cce-8c8d088b20e8')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c7a036b6-0616-46f9-8cce-8c8d088b20e8 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_0a4e8630-0f5a-4476-92bd-28bae4a0615b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0a4e8630-0f5a-4476-92bd-28bae4a0615b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["df['date_added']=df.loc[df['date_added']!='Unknown Date']['date_added'].astype('datetime64[ns]')"],"metadata":{"id":"YijwArgW6Spx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df[df['date_added'].astype(str)=='Unknown Date']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"nPqtC009H2rU","executionInfo":{"status":"ok","timestamp":1755066868504,"user_tz":-330,"elapsed":306,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"84e024f0-9804-41e9-cee3-d5adc282579c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [show_id, type, title, director, cast, country, date_added, release_year, rating, duration, listed_in, description]\n","Index: []"],"text/html":["\n","  <div id=\"df-88765a2f-f16f-4622-b2d0-4ff01990e557\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_id</th>\n","      <th>type</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>country</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-88765a2f-f16f-4622-b2d0-4ff01990e557')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-88765a2f-f16f-4622-b2d0-4ff01990e557 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-88765a2f-f16f-4622-b2d0-4ff01990e557');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"Out of range float values are not JSON compliant: nan"}},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["df['date_added'].isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nb9ywcxWIGfi","executionInfo":{"status":"ok","timestamp":1755066896925,"user_tz":-330,"elapsed":21,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"5e5155ea-5750-4732-b10d-6a0dc7954b54"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(158)"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["df[df['show_id']=='s6067']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"wSTz04RBJM-w","executionInfo":{"status":"ok","timestamp":1755066994251,"user_tz":-330,"elapsed":136,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"f22ffa8a-788b-402f-80cb-34f242b4fc59"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     show_id     type                                        title director  \\\n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","\n","                     cast         country date_added  release_year rating  \\\n","6066     Daniel Radcliffe  United Kingdom        NaT          2013  TV-MA   \n","6066     Daniel Radcliffe  United Kingdom        NaT          2013  TV-MA   \n","6066     Daniel Radcliffe  United Kingdom        NaT          2013  TV-MA   \n","6066             Jon Hamm  United Kingdom        NaT          2013  TV-MA   \n","6066             Jon Hamm  United Kingdom        NaT          2013  TV-MA   \n","6066             Jon Hamm  United Kingdom        NaT          2013  TV-MA   \n","6066          Adam Godley  United Kingdom        NaT          2013  TV-MA   \n","6066          Adam Godley  United Kingdom        NaT          2013  TV-MA   \n","6066          Adam Godley  United Kingdom        NaT          2013  TV-MA   \n","6066   Christopher Godwin  United Kingdom        NaT          2013  TV-MA   \n","6066   Christopher Godwin  United Kingdom        NaT          2013  TV-MA   \n","6066   Christopher Godwin  United Kingdom        NaT          2013  TV-MA   \n","6066      Rosie Cavaliero  United Kingdom        NaT          2013  TV-MA   \n","6066      Rosie Cavaliero  United Kingdom        NaT          2013  TV-MA   \n","6066      Rosie Cavaliero  United Kingdom        NaT          2013  TV-MA   \n","6066     Vicki Pepperdine  United Kingdom        NaT          2013  TV-MA   \n","6066     Vicki Pepperdine  United Kingdom        NaT          2013  TV-MA   \n","6066     Vicki Pepperdine  United Kingdom        NaT          2013  TV-MA   \n","6066      Margaret Clunie  United Kingdom        NaT          2013  TV-MA   \n","6066      Margaret Clunie  United Kingdom        NaT          2013  TV-MA   \n","6066      Margaret Clunie  United Kingdom        NaT          2013  TV-MA   \n","6066            Tim Steed  United Kingdom        NaT          2013  TV-MA   \n","6066            Tim Steed  United Kingdom        NaT          2013  TV-MA   \n","6066            Tim Steed  United Kingdom        NaT          2013  TV-MA   \n","6066            Shaun Pye  United Kingdom        NaT          2013  TV-MA   \n","6066            Shaun Pye  United Kingdom        NaT          2013  TV-MA   \n","6066            Shaun Pye  United Kingdom        NaT          2013  TV-MA   \n","\n","       duration         listed_in  \\\n","6066  2 Seasons  British TV Shows   \n","6066  2 Seasons       TV Comedies   \n","6066  2 Seasons         TV Dramas   \n","6066  2 Seasons  British TV Shows   \n","6066  2 Seasons       TV Comedies   \n","6066  2 Seasons         TV Dramas   \n","6066  2 Seasons  British TV Shows   \n","6066  2 Seasons       TV Comedies   \n","6066  2 Seasons         TV Dramas   \n","6066  2 Seasons  British TV Shows   \n","6066  2 Seasons       TV Comedies   \n","6066  2 Seasons         TV Dramas   \n","6066  2 Seasons  British TV Shows   \n","6066  2 Seasons       TV Comedies   \n","6066  2 Seasons         TV Dramas   \n","6066  2 Seasons  British TV Shows   \n","6066  2 Seasons       TV Comedies   \n","6066  2 Seasons         TV Dramas   \n","6066  2 Seasons  British TV Shows   \n","6066  2 Seasons       TV Comedies   \n","6066  2 Seasons         TV Dramas   \n","6066  2 Seasons  British TV Shows   \n","6066  2 Seasons       TV Comedies   \n","6066  2 Seasons         TV Dramas   \n","6066  2 Seasons  British TV Shows   \n","6066  2 Seasons       TV Comedies   \n","6066  2 Seasons         TV Dramas   \n","\n","                                            description  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  \n","6066  Set during the Russian Revolution, this comic ...  "],"text/html":["\n","  <div id=\"df-12613c03-9f2c-4039-9c2b-dbb676086b3a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_id</th>\n","      <th>type</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>country</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Daniel Radcliffe</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>British TV Shows</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Daniel Radcliffe</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Comedies</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Daniel Radcliffe</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Dramas</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Jon Hamm</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>British TV Shows</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Jon Hamm</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Comedies</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Jon Hamm</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Dramas</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Adam Godley</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>British TV Shows</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Adam Godley</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Comedies</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Adam Godley</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Dramas</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Christopher Godwin</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>British TV Shows</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Christopher Godwin</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Comedies</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Christopher Godwin</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Dramas</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Rosie Cavaliero</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>British TV Shows</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Rosie Cavaliero</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Comedies</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Rosie Cavaliero</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Dramas</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Vicki Pepperdine</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>British TV Shows</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Vicki Pepperdine</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Comedies</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Vicki Pepperdine</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Dramas</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Margaret Clunie</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>British TV Shows</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Margaret Clunie</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Comedies</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Margaret Clunie</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Dramas</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Tim Steed</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>British TV Shows</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Tim Steed</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Comedies</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Tim Steed</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Dramas</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Shaun Pye</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>British TV Shows</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Shaun Pye</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Comedies</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Shaun Pye</td>\n","      <td>United Kingdom</td>\n","      <td>NaT</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>TV Dramas</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-12613c03-9f2c-4039-9c2b-dbb676086b3a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-12613c03-9f2c-4039-9c2b-dbb676086b3a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-12613c03-9f2c-4039-9c2b-dbb676086b3a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-d5d550bb-5666-4add-bb39-f89ec382eb11\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d5d550bb-5666-4add-bb39-f89ec382eb11')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-d5d550bb-5666-4add-bb39-f89ec382eb11 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["data[data['date_added'].isna()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"zByzFuXMIpr3","executionInfo":{"status":"ok","timestamp":1755066957807,"user_tz":-330,"elapsed":70,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"a15036d4-952c-4ffb-edc0-15ff38d3fe1c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     show_id     type                                        title director  \\\n","6066   s6067  TV Show  A Young Doctor's Notebook and Other Stories      NaN   \n","6174   s6175  TV Show              Anthony Bourdain: Parts Unknown      NaN   \n","6795   s6796  TV Show                                      Frasier      NaN   \n","6806   s6807  TV Show                                      Friends      NaN   \n","6901   s6902  TV Show                              Gunslinger Girl      NaN   \n","7196   s7197  TV Show                                     Kikoriki      NaN   \n","7254   s7255  TV Show                          La Familia P. Luche      NaN   \n","7406   s7407  TV Show                                        Maron      NaN   \n","7847   s7848  TV Show                                 Red vs. Blue      NaN   \n","8182   s8183  TV Show                 The Adventures of Figaro Pho      NaN   \n","\n","                                                   cast         country  \\\n","6066  Daniel Radcliffe, Jon Hamm, Adam Godley, Chris...  United Kingdom   \n","6174                                   Anthony Bourdain   United States   \n","6795  Kelsey Grammer, Jane Leeves, David Hyde Pierce...   United States   \n","6806  Jennifer Aniston, Courteney Cox, Lisa Kudrow, ...   United States   \n","6901  Yuuka Nanri, Kanako Mitsuhashi, Eri Sendai, Am...           Japan   \n","7196                                      Igor Dmitriev             NaN   \n","7254  Eugenio Derbez, Consuelo Duval, Luis Manuel Áv...   United States   \n","7406  Marc Maron, Judd Hirsch, Josh Brener, Nora Zeh...   United States   \n","7847  Burnie Burns, Jason Saldaña, Gustavo Sorola, G...   United States   \n","8182  Luke Jurevicius, Craig Behenna, Charlotte Haml...       Australia   \n","\n","     date_added  release_year rating    duration  \\\n","6066        NaN          2013  TV-MA   2 Seasons   \n","6174        NaN          2018  TV-PG   5 Seasons   \n","6795        NaN          2003  TV-PG  11 Seasons   \n","6806        NaN          2003  TV-14  10 Seasons   \n","6901        NaN          2008  TV-14   2 Seasons   \n","7196        NaN          2010   TV-Y   2 Seasons   \n","7254        NaN          2012  TV-14   3 Seasons   \n","7406        NaN          2016  TV-MA   4 Seasons   \n","7847        NaN          2015     NR  13 Seasons   \n","8182        NaN          2015  TV-Y7   2 Seasons   \n","\n","                                              listed_in  \\\n","6066           British TV Shows, TV Comedies, TV Dramas   \n","6174                                         Docuseries   \n","6795                     Classic & Cult TV, TV Comedies   \n","6806                     Classic & Cult TV, TV Comedies   \n","6901                       Anime Series, Crime TV Shows   \n","7196                                           Kids' TV   \n","7254  International TV Shows, Spanish-Language TV Sh...   \n","7406                                        TV Comedies   \n","7847  TV Action & Adventure, TV Comedies, TV Sci-Fi ...   \n","8182                              Kids' TV, TV Comedies   \n","\n","                                            description  \n","6066  Set during the Russian Revolution, this comic ...  \n","6174  This CNN original series has chef Anthony Bour...  \n","6795  Frasier Crane is a snooty but lovable Seattle ...  \n","6806  This hit sitcom follows the merry misadventure...  \n","6901  On the surface, the Social Welfare Agency appe...  \n","7196  A wacky rabbit and his gang of animal pals hav...  \n","7254  This irreverent sitcom featues Ludovico, Feder...  \n","7406  Marc Maron stars as Marc Maron, who interviews...  \n","7847  This parody of first-person shooter games, mil...  \n","8182  Imagine your worst fears, then multiply them: ...  "],"text/html":["\n","  <div id=\"df-a7bcbfb6-d786-4592-b2a3-577eaec1aa36\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_id</th>\n","      <th>type</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>country</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6066</th>\n","      <td>s6067</td>\n","      <td>TV Show</td>\n","      <td>A Young Doctor's Notebook and Other Stories</td>\n","      <td>NaN</td>\n","      <td>Daniel Radcliffe, Jon Hamm, Adam Godley, Chris...</td>\n","      <td>United Kingdom</td>\n","      <td>NaN</td>\n","      <td>2013</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>British TV Shows, TV Comedies, TV Dramas</td>\n","      <td>Set during the Russian Revolution, this comic ...</td>\n","    </tr>\n","    <tr>\n","      <th>6174</th>\n","      <td>s6175</td>\n","      <td>TV Show</td>\n","      <td>Anthony Bourdain: Parts Unknown</td>\n","      <td>NaN</td>\n","      <td>Anthony Bourdain</td>\n","      <td>United States</td>\n","      <td>NaN</td>\n","      <td>2018</td>\n","      <td>TV-PG</td>\n","      <td>5 Seasons</td>\n","      <td>Docuseries</td>\n","      <td>This CNN original series has chef Anthony Bour...</td>\n","    </tr>\n","    <tr>\n","      <th>6795</th>\n","      <td>s6796</td>\n","      <td>TV Show</td>\n","      <td>Frasier</td>\n","      <td>NaN</td>\n","      <td>Kelsey Grammer, Jane Leeves, David Hyde Pierce...</td>\n","      <td>United States</td>\n","      <td>NaN</td>\n","      <td>2003</td>\n","      <td>TV-PG</td>\n","      <td>11 Seasons</td>\n","      <td>Classic &amp; Cult TV, TV Comedies</td>\n","      <td>Frasier Crane is a snooty but lovable Seattle ...</td>\n","    </tr>\n","    <tr>\n","      <th>6806</th>\n","      <td>s6807</td>\n","      <td>TV Show</td>\n","      <td>Friends</td>\n","      <td>NaN</td>\n","      <td>Jennifer Aniston, Courteney Cox, Lisa Kudrow, ...</td>\n","      <td>United States</td>\n","      <td>NaN</td>\n","      <td>2003</td>\n","      <td>TV-14</td>\n","      <td>10 Seasons</td>\n","      <td>Classic &amp; Cult TV, TV Comedies</td>\n","      <td>This hit sitcom follows the merry misadventure...</td>\n","    </tr>\n","    <tr>\n","      <th>6901</th>\n","      <td>s6902</td>\n","      <td>TV Show</td>\n","      <td>Gunslinger Girl</td>\n","      <td>NaN</td>\n","      <td>Yuuka Nanri, Kanako Mitsuhashi, Eri Sendai, Am...</td>\n","      <td>Japan</td>\n","      <td>NaN</td>\n","      <td>2008</td>\n","      <td>TV-14</td>\n","      <td>2 Seasons</td>\n","      <td>Anime Series, Crime TV Shows</td>\n","      <td>On the surface, the Social Welfare Agency appe...</td>\n","    </tr>\n","    <tr>\n","      <th>7196</th>\n","      <td>s7197</td>\n","      <td>TV Show</td>\n","      <td>Kikoriki</td>\n","      <td>NaN</td>\n","      <td>Igor Dmitriev</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2010</td>\n","      <td>TV-Y</td>\n","      <td>2 Seasons</td>\n","      <td>Kids' TV</td>\n","      <td>A wacky rabbit and his gang of animal pals hav...</td>\n","    </tr>\n","    <tr>\n","      <th>7254</th>\n","      <td>s7255</td>\n","      <td>TV Show</td>\n","      <td>La Familia P. Luche</td>\n","      <td>NaN</td>\n","      <td>Eugenio Derbez, Consuelo Duval, Luis Manuel Áv...</td>\n","      <td>United States</td>\n","      <td>NaN</td>\n","      <td>2012</td>\n","      <td>TV-14</td>\n","      <td>3 Seasons</td>\n","      <td>International TV Shows, Spanish-Language TV Sh...</td>\n","      <td>This irreverent sitcom featues Ludovico, Feder...</td>\n","    </tr>\n","    <tr>\n","      <th>7406</th>\n","      <td>s7407</td>\n","      <td>TV Show</td>\n","      <td>Maron</td>\n","      <td>NaN</td>\n","      <td>Marc Maron, Judd Hirsch, Josh Brener, Nora Zeh...</td>\n","      <td>United States</td>\n","      <td>NaN</td>\n","      <td>2016</td>\n","      <td>TV-MA</td>\n","      <td>4 Seasons</td>\n","      <td>TV Comedies</td>\n","      <td>Marc Maron stars as Marc Maron, who interviews...</td>\n","    </tr>\n","    <tr>\n","      <th>7847</th>\n","      <td>s7848</td>\n","      <td>TV Show</td>\n","      <td>Red vs. Blue</td>\n","      <td>NaN</td>\n","      <td>Burnie Burns, Jason Saldaña, Gustavo Sorola, G...</td>\n","      <td>United States</td>\n","      <td>NaN</td>\n","      <td>2015</td>\n","      <td>NR</td>\n","      <td>13 Seasons</td>\n","      <td>TV Action &amp; Adventure, TV Comedies, TV Sci-Fi ...</td>\n","      <td>This parody of first-person shooter games, mil...</td>\n","    </tr>\n","    <tr>\n","      <th>8182</th>\n","      <td>s8183</td>\n","      <td>TV Show</td>\n","      <td>The Adventures of Figaro Pho</td>\n","      <td>NaN</td>\n","      <td>Luke Jurevicius, Craig Behenna, Charlotte Haml...</td>\n","      <td>Australia</td>\n","      <td>NaN</td>\n","      <td>2015</td>\n","      <td>TV-Y7</td>\n","      <td>2 Seasons</td>\n","      <td>Kids' TV, TV Comedies</td>\n","      <td>Imagine your worst fears, then multiply them: ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7bcbfb6-d786-4592-b2a3-577eaec1aa36')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a7bcbfb6-d786-4592-b2a3-577eaec1aa36 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a7bcbfb6-d786-4592-b2a3-577eaec1aa36');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-8878abce-13d3-45b6-929b-bf5796984446\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8878abce-13d3-45b6-929b-bf5796984446')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-8878abce-13d3-45b6-929b-bf5796984446 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["df['date_added'].isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pKuPgIKYI7PC","executionInfo":{"status":"ok","timestamp":1755067134423,"user_tz":-330,"elapsed":17,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"2827426a-8b75-4681-9d53-9163bf46df72"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(158)"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["df.fillna({'date_added':'Unknown Date'},inplace=True)"],"metadata":{"id":"12Gz1mSFJxmp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e0XeEpnHKCEy","executionInfo":{"status":"ok","timestamp":1755067209210,"user_tz":-330,"elapsed":238,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"e0e690d9-d914-451e-d2e8-eec69b8f91d9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 202065 entries, 0 to 8806\n","Data columns (total 12 columns):\n"," #   Column        Non-Null Count   Dtype \n","---  ------        --------------   ----- \n"," 0   show_id       202065 non-null  object\n"," 1   type          202065 non-null  object\n"," 2   title         202065 non-null  object\n"," 3   director      151422 non-null  object\n"," 4   cast          199916 non-null  object\n"," 5   country       190168 non-null  object\n"," 6   date_added    202065 non-null  object\n"," 7   release_year  202065 non-null  int64 \n"," 8   rating        201998 non-null  object\n"," 9   duration      202062 non-null  object\n"," 10  listed_in     202065 non-null  object\n"," 11  description   202065 non-null  object\n","dtypes: int64(1), object(11)\n","memory usage: 20.0+ MB\n"]}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LjHew84eKDav","executionInfo":{"status":"ok","timestamp":1755067387326,"user_tz":-330,"elapsed":72,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"f4c2e49c-8ade-42b8-ac4b-2d8fccac1580"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 202065 entries, 0 to 8806\n","Data columns (total 12 columns):\n"," #   Column        Non-Null Count   Dtype \n","---  ------        --------------   ----- \n"," 0   show_id       202065 non-null  object\n"," 1   type          202065 non-null  object\n"," 2   title         202065 non-null  object\n"," 3   director      151422 non-null  object\n"," 4   cast          199916 non-null  object\n"," 5   country       190168 non-null  object\n"," 6   date_added    202065 non-null  object\n"," 7   release_year  202065 non-null  int64 \n"," 8   rating        201998 non-null  object\n"," 9   duration      202062 non-null  object\n"," 10  listed_in     202065 non-null  object\n"," 11  description   202065 non-null  object\n","dtypes: int64(1), object(11)\n","memory usage: 20.0+ MB\n"]}]},{"cell_type":"code","source":["data['date_added'].astype('datetime64[ns]')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"avLJMML5Kwpm","executionInfo":{"status":"ok","timestamp":1755067501506,"user_tz":-330,"elapsed":605,"user":{"displayName":"Tarini Prasad","userId":"07492836661245938651"}},"outputId":"f5b313a1-a4fb-4161-837d-3220a018f977"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      2021-09-25\n","1      2021-09-24\n","2      2021-09-24\n","3      2021-09-24\n","4      2021-09-24\n","          ...    \n","8802   2019-11-20\n","8803   2019-07-01\n","8804   2019-11-01\n","8805   2020-01-11\n","8806   2019-03-02\n","Name: date_added, Length: 8807, dtype: datetime64[ns]"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date_added</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2021-09-25</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2021-09-24</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2021-09-24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2021-09-24</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2021-09-24</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8802</th>\n","      <td>2019-11-20</td>\n","    </tr>\n","    <tr>\n","      <th>8803</th>\n","      <td>2019-07-01</td>\n","    </tr>\n","    <tr>\n","      <th>8804</th>\n","      <td>2019-11-01</td>\n","    </tr>\n","    <tr>\n","      <th>8805</th>\n","      <td>2020-01-11</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>2019-03-02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8807 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> datetime64[ns]</label>"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":[],"metadata":{"id":"0Q671N9WK9B3"},"execution_count":null,"outputs":[]}]}